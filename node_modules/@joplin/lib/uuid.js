"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const createUuidV4 = require('uuid/v4');
const non_secure_1 = require("nanoid/non-secure");
// https://zelark.github.io/nano-id-cc/
// https://security.stackexchange.com/a/41749/1873
// > On the other hand, 128 bits (between 21 and 22 characters
// > alphanumeric) is beyond the reach of brute-force attacks pretty much
// > indefinitely
const nanoid = (0, non_secure_1.customAlphabet)('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', 22);
exports.default = {
    create: function () {
        return createUuidV4().replace(/-/g, '');
    },
    createNano: function () {
        return nanoid();
    },
};
//# sourceMappingURL=uuid.js.map