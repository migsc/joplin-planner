"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const BaseService_1 = require("./BaseService");
const Migration_1 = require("../models/Migration");
class MigrationService extends BaseService_1.default {
    static instance() {
        if (this.instance_)
            return this.instance_;
        this.instance_ = new MigrationService();
        return this.instance_;
    }
    runScript(num) {
        return __awaiter(this, void 0, void 0, function* () {
            const script = Migration_1.default.script(num);
            yield script.exec();
        });
    }
    run() {
        return __awaiter(this, void 0, void 0, function* () {
            const migrations = yield Migration_1.default.migrationsToDo();
            for (const migration of migrations) {
                this.logger().info(`Running migration: ${migration.number}`);
                try {
                    yield this.runScript(migration.number);
                    yield Migration_1.default.delete(migration.id);
                }
                catch (error) {
                    this.logger().error(`Cannot run migration: ${migration.number}`, error);
                    break;
                }
            }
        });
    }
}
exports.default = MigrationService;
//# sourceMappingURL=MigrationService.js.map