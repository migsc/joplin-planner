"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultImportExportModule = exports.ImportModuleOutputFormat = exports.FileSystemItem = exports.ModuleType = void 0;
const locale_1 = require("../../locale");
var ModuleType;
(function (ModuleType) {
    ModuleType["Importer"] = "importer";
    ModuleType["Exporter"] = "exporter";
})(ModuleType = exports.ModuleType || (exports.ModuleType = {}));
var FileSystemItem;
(function (FileSystemItem) {
    FileSystemItem["File"] = "file";
    FileSystemItem["Directory"] = "directory";
})(FileSystemItem = exports.FileSystemItem || (exports.FileSystemItem = {}));
var ImportModuleOutputFormat;
(function (ImportModuleOutputFormat) {
    ImportModuleOutputFormat["Markdown"] = "md";
    ImportModuleOutputFormat["Html"] = "html";
})(ImportModuleOutputFormat = exports.ImportModuleOutputFormat || (exports.ImportModuleOutputFormat = {}));
function moduleFullLabel(moduleSource = null) {
    const format = this.format.split('_')[0];
    const label = [`${format.toUpperCase()} - ${this.description}`];
    if (moduleSource && this.sources.length > 1) {
        label.push(`(${moduleSource === 'file' ? (0, locale_1._)('File') : (0, locale_1._)('Directory')})`);
    }
    return label.join(' ');
}
function defaultImportExportModule(type) {
    return {
        type: type,
        format: '',
        fileExtensions: [],
        sources: [],
        description: '',
        isNoteArchive: true,
        importerClass: '',
        outputFormat: ImportModuleOutputFormat.Markdown,
        isDefault: false,
        fullLabel: moduleFullLabel,
        isCustom: false,
        target: FileSystemItem.File,
    };
}
exports.defaultImportExportModule = defaultImportExportModule;
//# sourceMappingURL=types.js.map