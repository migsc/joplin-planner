"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const InteropService_Importer_Base_1 = require("./InteropService_Importer_Base");
const InteropService_Importer_Raw_1 = require("./InteropService_Importer_Raw");
const { filename } = require('../../path-utils');
const shim_1 = require("../../shim");
const fs = require('fs-extra');
class InteropService_Importer_Jex extends InteropService_Importer_Base_1.default {
    exec(result) {
        return __awaiter(this, void 0, void 0, function* () {
            const tempDir = yield this.temporaryDirectory_(true);
            try {
                yield shim_1.default.fsDriver().tarExtract({
                    strict: true,
                    portable: true,
                    file: this.sourcePath_,
                    cwd: tempDir,
                });
            }
            catch (error) {
                error.message = `Could not decompress "${this.sourcePath_}". The file may be corrupted. Error was: ${error.message}`;
                throw error;
            }
            if (!('defaultFolderTitle' in this.options_))
                this.options_.defaultFolderTitle = filename(this.sourcePath_);
            const importer = new InteropService_Importer_Raw_1.default();
            yield importer.init(tempDir, this.options_);
            result = yield importer.exec(result);
            yield fs.remove(tempDir);
            return result;
        });
    }
}
exports.default = InteropService_Importer_Jex;
//# sourceMappingURL=InteropService_Importer_Jex.js.map