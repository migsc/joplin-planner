"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const KeychainServiceDriverBase_1 = require("./KeychainServiceDriverBase");
const shim_1 = require("../../shim");
class KeychainServiceDriver extends KeychainServiceDriverBase_1.default {
    setPassword(name, password) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!shim_1.default.keytar())
                return false;
            yield shim_1.default.keytar().setPassword(`${this.appId}.${name}`, `${this.clientId}@joplin`, password);
            return true;
        });
    }
    password(name) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!shim_1.default.keytar())
                return null;
            return shim_1.default.keytar().getPassword(`${this.appId}.${name}`, `${this.clientId}@joplin`);
        });
    }
    deletePassword(name) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!shim_1.default.keytar())
                return;
            yield shim_1.default.keytar().deletePassword(`${this.appId}.${name}`, `${this.clientId}@joplin`);
        });
    }
}
exports.default = KeychainServiceDriver;
//# sourceMappingURL=KeychainServiceDriver.node.js.map