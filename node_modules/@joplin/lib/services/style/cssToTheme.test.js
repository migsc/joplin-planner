"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const cssToTheme_1 = require("./cssToTheme");
describe('cssToTheme', function () {
    it('should convert a CSS string to a theme', () => __awaiter(this, void 0, void 0, function* () {
        const input = `
			:root {
				--joplin-appearence: light;
				--joplin-color: #333333;
				--joplin-background-color: #778899;

				/* Should skip this comment and empty lines */

				--joplin-background-color-transparent: rgba(255,255,255,0.9);
			}`;
        const expected = {
            appearence: 'light',
            color: '#333333',
            backgroundColor: '#778899',
            backgroundColorTransparent: 'rgba(255,255,255,0.9)',
        };
        const actual = (0, cssToTheme_1.default)(input, 'test.css');
        expect(actual).toEqual(expected);
    }));
});
//# sourceMappingURL=cssToTheme.test.js.map