"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
class NavService {
    static go(routeName) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.handlers_.length) {
                const r = yield this.handlers_[this.handlers_.length - 1]();
                if (r)
                    return r;
            }
            this.dispatch({
                type: 'NAV_GO',
                routeName: routeName,
            });
        });
    }
    static addHandler(handler) {
        for (let i = this.handlers_.length - 1; i >= 0; i--) {
            const h = this.handlers_[i];
            if (h === handler)
                return;
        }
        this.handlers_.push(handler);
    }
    static removeHandler(hanlder) {
        for (let i = this.handlers_.length - 1; i >= 0; i--) {
            const h = this.handlers_[i];
            if (h === hanlder)
                this.handlers_.splice(i, 1);
        }
    }
}
exports.default = NavService;
NavService.dispatch = () => { };
NavService.handlers_ = [];
//# sourceMappingURL=NavService.js.map