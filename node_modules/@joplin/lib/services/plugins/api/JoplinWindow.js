"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs-extra");
class JoplinWindow {
    constructor(implementation, plugin, store) {
        this.implementation_ = implementation;
        this.plugin_ = plugin;
        this.store_ = store;
    }
    /**
     * Loads a chrome CSS file. It will apply to the window UI elements, except
     * for the note viewer. It is the same as the "Custom stylesheet for
     * Joplin-wide app styles" setting. See the [Load CSS Demo](https://github.com/laurent22/joplin/tree/dev/packages/app-cli/tests/support/plugins/load_css)
     * for an example.
     */
    loadChromeCssFile(filePath) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.implementation_.injectCustomStyles(`pluginStyles_${this.plugin_.id}`, filePath);
        });
    }
    /**
     * Loads a note CSS file. It will apply to the note viewer, as well as any
     * exported or printed note. It is the same as the "Custom stylesheet for
     * rendered Markdown" setting. See the [Load CSS Demo](https://github.com/laurent22/joplin/tree/dev/packages/app-cli/tests/support/plugins/load_css)
     * for an example.
     */
    loadNoteCssFile(filePath) {
        return __awaiter(this, void 0, void 0, function* () {
            const cssString = yield fs.readFile(filePath, 'utf8');
            this.store_.dispatch({
                type: 'CUSTOM_CSS_APPEND',
                css: cssString,
            });
        });
    }
}
exports.default = JoplinWindow;
//# sourceMappingURL=JoplinWindow.js.map