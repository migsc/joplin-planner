"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const eventManager_1 = require("../../../eventManager");
/**
 * @ignore
 *
 * Not sure if it's the best way to hook into the app
 * so for now disable filters.
 */
class JoplinFilters {
    on(name, callback) {
        return __awaiter(this, void 0, void 0, function* () {
            eventManager_1.default.filterOn(name, callback);
        });
    }
    off(name, callback) {
        return __awaiter(this, void 0, void 0, function* () {
            eventManager_1.default.filterOff(name, callback);
        });
    }
}
exports.default = JoplinFilters;
//# sourceMappingURL=JoplinFilters.js.map