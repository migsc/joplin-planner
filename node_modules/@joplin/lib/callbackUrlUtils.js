"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseCallbackUrl = exports.getTagCallbackUrl = exports.getFolderCallbackUrl = exports.getNoteCallbackUrl = exports.isCallbackUrl = void 0;
const URL = require('url-parse');
function isCallbackUrl(s) {
    return s.startsWith('joplin://x-callback-url/');
}
exports.isCallbackUrl = isCallbackUrl;
function getNoteCallbackUrl(noteId) {
    return `joplin://x-callback-url/openNote?id=${encodeURIComponent(noteId)}`;
}
exports.getNoteCallbackUrl = getNoteCallbackUrl;
function getFolderCallbackUrl(folderId) {
    return `joplin://x-callback-url/openFolder?id=${encodeURIComponent(folderId)}`;
}
exports.getFolderCallbackUrl = getFolderCallbackUrl;
function getTagCallbackUrl(tagId) {
    return `joplin://x-callback-url/openTag?id=${encodeURIComponent(tagId)}`;
}
exports.getTagCallbackUrl = getTagCallbackUrl;
function parseCallbackUrl(s) {
    if (!isCallbackUrl(s))
        throw new Error(`Invalid callback url ${s}`);
    const url = new URL(s, true);
    return {
        command: url.pathname.substring(url.pathname.lastIndexOf('/') + 1),
        params: url.query,
    };
}
exports.parseCallbackUrl = parseCallbackUrl;
//# sourceMappingURL=callbackUrlUtils.js.map